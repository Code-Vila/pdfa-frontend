import{H as o}from"./api-instances-vAPX33Yh.js";const d={async convertToPdfA(a){var r;try{const e=new FormData;return a.files.forEach((s,t)=>{e.append(`files[${t}]`,s)}),(await o.post("/pdf/convert",e,{headers:{"Content-Type":"multipart/form-data"},timeout:3e5})).data}catch(e){return(r=e.response)!=null&&r.data?e.response.data:{success:!1,message:"Erro ao processar conversão. Tente novamente."}}},async downloadConvertedFile(a){var r;try{return(await o.get(`/pdf/download/${a}`,{responseType:"blob"})).data}catch(e){return(r=e.response)!=null&&r.data?e.response.data:{success:!1,message:"Erro ao baixar arquivo. Tente novamente."}}},async getConversionStatus(a){var r;try{return(await o.get(`/pdf/status/${a}`)).data}catch(e){return(r=e.response)!=null&&r.data?e.response.data:{success:!1,message:"Erro ao verificar status da conversão."}}},async getConversionHistory(a){var r;try{const e=new URLSearchParams;return a!=null&&a.page&&e.append("page",a.page.toString()),a!=null&&a.per_page&&e.append("per_page",a.per_page.toString()),a!=null&&a.status&&e.append("status",a.status),a!=null&&a.date_from&&e.append("date_from",a.date_from),a!=null&&a.date_to&&e.append("date_to",a.date_to),a!=null&&a.filename&&e.append("filename",a.filename),a!=null&&a.order_by&&e.append("order_by",a.order_by),a!=null&&a.order_direction&&e.append("order_direction",a.order_direction),(await o.get(`/pdf/history?${e.toString()}`)).data}catch(e){return(r=e.response)!=null&&r.data?e.response.data:{success:!1,message:"Erro ao buscar histórico de conversões."}}},async getUserStats(){var a;try{return(await o.get("/pdf/stats")).data}catch(r){return(a=r.response)!=null&&a.data?r.response.data:{success:!1,message:"Erro ao buscar estatísticas."}}},async healthCheck(){var a;try{return(await o.get("/health")).data}catch(r){return(a=r.response)!=null&&a.data?r.response.data:{success:!1,message:"Erro ao verificar status da API."}}}};export{d as p};
